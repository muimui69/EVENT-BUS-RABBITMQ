apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbitmq-system
spec:
  serviceName: rabbitmq-headless
  replicas: 1  # Start with 1 replica for troubleshooting, scale later
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 30
      containers:
      - name: rabbitmq
        image: rabbitmq:3.11-management
        ports:
        - name: http
          protocol: TCP
          containerPort: 15672
        - name: amqp
          protocol: TCP
          containerPort: 5672
        - name: clustering
          protocol: TCP
          containerPort: 25672
        - name: epmd
          protocol: TCP
          containerPort: 4369
        env:
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secrets
              key: rabbitmq-password
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBITMQ_NODENAME
          value: rabbit@$(MY_POD_NAME).rabbitmq-headless.rabbitmq-system.svc.cluster.local
        - name: K8S_SERVICE_NAME
          value: rabbitmq-headless
        - name: K8S_HOSTNAME_SUFFIX
          value: .rabbitmq-headless.rabbitmq-system.svc.cluster.local
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: definitions-volume
          mountPath: /etc/rabbitmq/definitions.json
          subPath: definitions.json
        - name: data
          mountPath: /var/lib/rabbitmq/mnesia
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
        readinessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "ping"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: rabbitmq-config
          items:
          - key: rabbitmq.conf
            path: rabbitmq.conf
      - name: definitions-volume
        configMap:
          name: rabbitmq-config
          items:
          - key: definitions.json
            path: definitions.json
      - name: data
        persistentVolumeClaim:
          claimName: data-rabbitmq-0  # Use the fixed PVC directly instead of templates